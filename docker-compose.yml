
services:

  traefik:
    image: traefik:v2.11
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - backend-network

  db:
    container_name: postgres
    image: josianamj/postgres_db:latest
    build: 
        context: ./postgres2 
        dockerfile: Dockerfile
    restart: always
    environment:
       POSTGRES_USER: postgres
       POSTGRES_PASSWORD: password
       POSTGRES_DB: RestaurantDB
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "RestaurantDB"]
      interval: 10s
      retries: 5
      start_period: 60s
      timeout: 5s
    networks:
      - backend-network   # Agregado aquí AGREGUÉ UN NET PORQUE NO ME  LEVANTA EL POSTGRESS.

  backend:
    build: 
        context: ./backend 
        dockerfile: Dockerfile  
    image: josianamj/backend_image:latest
    depends_on:
      db:
        condition: service_healthy
      setup-mongo:
        condition: service_completed_successfully
    networks:
      - mongo-replica-sharding
      - backend-network   # Agregado aquí EL  NET ATTE PIKI ME CAGO EN TODO :3 
    labels: #veamos si hace routing este mae 
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=3000"

#------------------------REDIS------------------------------------|
#Levantando el servicio de redis en el compose.
  redis:
    container_name: redis
    build:
      context: ./redis
      dockerfile: Dockerfile
    image: josianamj/redis_image:latest
    ports:
      - "6379:6379"
    expose:
      - "6379"
    networks:
      - mongo-replica-sharding

#-----------------ELASTIC--------------------------------------|
#Levantando el servicio de elastic en el compose
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    environment:
      - discovery.type=single-node
      - network.host=0.0.0.0
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    networks:
      - backend-network
#------------------------------------------------------------------------|

  mongors1n1:
    container_name: mongors1n1
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    ports:
      - 27017:27017
    expose:
      - "27017"
    environment:
      TERM: xterm
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - data1:/data/db
    networks:
      - mongo-replica-sharding

  mongors1n2:
    container_name: mongors1n2
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    ports:
      - 27027:27017
    expose:
      - "27017"
    environment:
      TERM: xterm
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - data2:/data/db
    networks:
      - mongo-replica-sharding

  mongors1n3:
    container_name: mongors1n3
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    ports:
      - 27037:27017
    expose:
      - "27017"
    environment:
      TERM: xterm
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - data3:/data/db
    networks:
      - mongo-replica-sharding


  mongors2n1:
    container_name: mongors2n1
    image: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    ports:
      - 27047:27017
    expose:
      - "27017"
    environment:
      TERM: xterm
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - data4:/data/db
    networks:
      - mongo-replica-sharding

  mongors2n2:
    container_name: mongors2n2
    image: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    ports:
      - 27057:27017
    expose:
      - "27017"
    environment:
      TERM: xterm
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - data5:/data/db
    networks:
      - mongo-replica-sharding
      
  mongors2n3:
    container_name: mongors2n3
    image: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    ports:
      - 27067:27017
    expose:
      - "27017"
    environment:
      TERM: xterm
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - data6:/data/db
    networks:
      - mongo-replica-sharding

  mongors3n1:
    container_name: mongors3n1
    image: mongo
    command: mongod --shardsvr --replSet mongors3 --dbpath /data/db --port 27017
    ports:
      - 27077:27017
    expose:
      - "27017"
    environment:
      TERM: xterm
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - data7:/data/db
    networks:
      - mongo-replica-sharding

  mongors3n2:
    container_name: mongors3n2
    image: mongo
    command: mongod --shardsvr --replSet mongors3 --dbpath /data/db --port 27017
    ports:
      - 27087:27017
    expose:
      - "27017"
    environment:
      TERM: xterm
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - data8:/data/db
    networks:
      - mongo-replica-sharding

  mongors3n3:
    container_name: mongors3n3
    image: mongo
    command: mongod --shardsvr --replSet mongors3 --dbpath /data/db --port 27017
    ports:
      - 27097:27017
    expose:
      - "27017"
    environment:
      TERM: xterm
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - data9:/data/db
    networks:
      - mongo-replica-sharding

  mongocfg1:
    container_name: mongocfg1
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    environment:
      TERM: xterm
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - config1:/data/db
    networks:
      - mongo-replica-sharding

  mongocfg2:
    container_name: mongocfg2
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    environment:
      TERM: xterm
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - config2:/data/db
    networks:
      - mongo-replica-sharding

  mongocfg3:
    container_name: mongocfg3
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    environment:
      TERM: xterm
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - config3:/data/db
    networks:
      - mongo-replica-sharding

  mongos1:
    container_name: mongos1
    image: mongo
    depends_on:
      - mongocfg1
      - mongocfg2
    command: mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017 --port 27017 --bind_ip_all
    ports:
      - 27019:27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - mongo-replica-sharding

  setup-mongo:
    image: josianamj/setup_mongo:latest
    build: ./mongodb
    depends_on:
      - "mongos1"
    networks:
      - mongo-replica-sharding
    

volumes:
  data1:
  data2:
  data3:
  data4:
  data5:
  data6:
  data7:
  data8:
  data9:
  config1:
  config2:
  config3:
  elastic-data:

networks:
  mongo-replica-sharding:
    driver: bridge
  backend-network:   # Nueva red agregada
    driver: bridge